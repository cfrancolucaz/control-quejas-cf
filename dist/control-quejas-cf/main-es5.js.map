{"version":3,"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions: {}|namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/material.module.ts","webpack:///src/app/model/comercios.model.ts","webpack:///src/app/model/departamentos.model.ts","webpack:///src/app/model/municipios.model.ts","webpack:///src/app/model/quejas.model.ts","webpack:///src/app/model/regiones.model.ts","webpack:///src/app/model/sucursales.model.ts","webpack:///src/app/model/usuario.model.ts","webpack:///src/app/service/web.service.ts","webpack:///src/app/view/comercios/comercios.component.html","webpack:///src/app/view/comercios/comercios.component.ts","webpack:///src/app/view/comercios/comerciostecleo/comerciostecleo.component.html","webpack:///src/app/view/comercios/comerciostecleo/comerciostecleo.component.ts","webpack:///src/app/view/departamentos/departamentos.component.html","webpack:///src/app/view/departamentos/departamentos.component.ts","webpack:///src/app/view/departamentos/departamentostecleo/departamentostecleo.component.html","webpack:///src/app/view/departamentos/departamentostecleo/departamentostecleo.component.ts","webpack:///src/app/view/filtroquejas/filtroquejas.component.html","webpack:///src/app/view/filtroquejas/filtroquejas.component.ts","webpack:///src/app/view/inicio/inicio.component.ts","webpack:///src/app/view/inicio/inicio.component.html","webpack:///src/app/view/login/login.component.ts","webpack:///src/app/view/login/login.component.html","webpack:///src/app/view/municipios/municipios.component.html","webpack:///src/app/view/municipios/municipios.component.ts","webpack:///src/app/view/municipios/municipiostecleo/municipiostecleo.component.html","webpack:///src/app/view/municipios/municipiostecleo/municipiostecleo.component.ts","webpack:///src/app/view/quejas/quejas.component.html","webpack:///src/app/view/quejas/quejas.component.ts","webpack:///src/app/view/regiones/regiones.component.html","webpack:///src/app/view/regiones/regiones.component.ts","webpack:///src/app/view/regiones/regionestecleo/regionestecleo.component.ts","webpack:///src/app/view/regiones/regionestecleo/regionestecleo.component.html","webpack:///src/app/view/sucursales/sucursales.component.html","webpack:///src/app/view/sucursales/sucursales.component.ts","webpack:///src/app/view/sucursales/sucursalestecleo/sucursalestecleo.component.html","webpack:///src/app/view/sucursales/sucursalestecleo/sucursalestecleo.component.ts","webpack:///src/app/view/usuarios/usuarios.component.ts","webpack:///src/app/view/usuarios/usuarios.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","routes","path","component","FiltroquejasComponent","InicioComponent","UsuariosComponent","children","SucursalesComponent","SucursalestecleoComponent","ComerciosComponent","ComerciostecleoComponent","MunicipiosComponent","MunicipiostecleoComponent","DepartamentosComponent","DepartamentostecleoComponent","RegionesComponent","RegionestecleoComponent","QuejasComponent","LoginComponent","redirectTo","pathMatch","AppRoutingModule","RouterModule","AppComponent","service","title","AppModule","provide","LocationStrategy","useClass","HashLocationStrategy","BrowserModule","BrowserAnimationsModule","MaterialModule","HttpClientModule","ReactiveFormsModule","FormsModule","CommonModule","MatTableModule","MatToolbarModule","MatPaginatorModule","MatButtonModule","MatIconModule","MatSortModule","MatFormFieldModule","MatInputModule","MatCardModule","MatSnackBarModule","MatSidenavModule","MatMenuModule","MatDividerModule","MatDialogModule","MatSelectModule","MatCheckboxModule","MatSlideToggleModule","MatTreeModule","MatListModule","MatStepperModule","MatExpansionModule","CdkAccordionModule","MatDatepickerModule","MatTooltipModule","MatNativeDateModule","MatGridListModule","Comercios","descripcion","encargado","municipiosId","Departamentos","regionesId","Municipios","departamentosId","Quejas","fecha","comerciosId","sucursalId","Regiones","Sucursales","Usuario","user","password","WebServices","http","router","url","get","pass","usuario","reqHeader","HttpHeaders","post","JSON","stringify","headers","put","data","token","sessionStorage","getItem","parse","access_token","_usuario","setItem","navigate","clear","isLogin","logout","snackBar","rutaActiva","_datos","_datosMunicipios","validaLogin","buscar","setFiltros","undefined","getComerciosMunicipioId","subscribe","getComercios","relativeTo","respuesta","confirm","deleteComercios","getMunicipios","grabar","cls","obtenerDatos","snapshot","params","Id","postComercios","open","duration","cerrar","putComercios","getComerciosId","_datosRegion","getDepartamentosRegionId","getDepartamentos","deleteDepartamentos","getRegiones","postDepartamentos","putDepartamentos","getDepartamentosId","_datosDepartamentos","getQuejasDepartamentoId","getQuejasRegionesId","getQuejas","console","log","selectionChangeRegion","hide","getLogin","login","ingresar","getMunicipiosDepartamentosId","deleteMunicipios","postMunicipio","putMunicipio","getMunicipioId","datePipe","_datosComercios","_datosSucursales","sucursalesId","transform","Date","postQuejas","getSucursalComerciosId","DatePipe","selectionChangeDepartamento","selectionChangeMunicipio","selectionChangeComercio","regiones","deleteRegiones","postRegiones","putRegiones","getRegionesId","getSucursales","deleteSucursal","postSucursal","putSucursal","getSucursalId","postUsuario","environment","production","enableProdMode","platformBrowser","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ComerciosComponent } from './view/comercios/comercios.component';\nimport { ComerciostecleoComponent } from './view/comercios/comerciostecleo/comerciostecleo.component';\nimport { DepartamentosComponent } from './view/departamentos/departamentos.component';\nimport { DepartamentostecleoComponent } from './view/departamentos/departamentostecleo/departamentostecleo.component';\nimport { FiltroquejasComponent } from './view/filtroquejas/filtroquejas.component';\nimport { InicioComponent } from './view/inicio/inicio.component';\nimport { LoginComponent } from './view/login/login.component';\nimport { MunicipiosComponent } from './view/municipios/municipios.component';\nimport { MunicipiostecleoComponent } from './view/municipios/municipiostecleo/municipiostecleo.component';\nimport { QuejasComponent } from './view/quejas/quejas.component';\nimport { RegionesComponent } from './view/regiones/regiones.component';\nimport { RegionestecleoComponent } from './view/regiones/regionestecleo/regionestecleo.component';\nimport { SucursalesComponent } from './view/sucursales/sucursales.component';\nimport { SucursalestecleoComponent } from './view/sucursales/sucursalestecleo/sucursalestecleo.component';\nimport { UsuariosComponent } from './view/usuarios/usuarios.component';\n\nconst routes: Routes = [\n  {path: 'filtroquejas',component:FiltroquejasComponent},\n  {path: 'inicio',component:InicioComponent},\n  {path: 'usuarios',component:UsuariosComponent},\n  {path: 'sucursales',children:[{path:'', component:SucursalesComponent},{path:'sucursalestecleo/:Id',component:SucursalestecleoComponent}]},\n  {path: 'comercios',children:[{path:'', component:ComerciosComponent},{path:'comerciostecleo/:Id',component:ComerciostecleoComponent}]},\n  {path: 'municipios',children:[{path:'', component:MunicipiosComponent},{path:'municipiostecleo/:Id',component:MunicipiostecleoComponent}]},\n  {path: 'departamentos',children:[{path:'', component:DepartamentosComponent},{path:'departamentostecleo/:Id',component:DepartamentostecleoComponent}]},\n  {path: 'regiones',children:[{path:'', component:RegionesComponent},{path:'regionestecleo/:Id',component:RegionestecleoComponent}]},\n  {path: 'quejas',component:QuejasComponent},\n  {path: 'login',component:LoginComponent},\n  {path: '', redirectTo: '/inicio', pathMatch: 'full' },\n  {path: '**', redirectTo: '/inicio' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<mat-toolbar color=\"primary\" class=\"example-toolbar\">\n  <button *ngIf=\"service.isLogin()\" mat-icon-button (click)=\"sidenav.toggle()\">\n    <mat-icon *ngIf=\"!sidenav.opened\">menu</mat-icon>\n    <mat-icon *ngIf=\"sidenav.opened\">close</mat-icon>\n  </button>\n\n  <h1 class=\"example-app-name\">Quejas CFranco</h1>\n\n  <span class=\"example-spacer\"></span>\n\n  <button *ngIf=\"service.isLogin()\" mat-icon-button [matMenuTriggerFor]=\"menu\">\n    <mat-icon>more_vert</mat-icon>\n  </button>\n  <mat-menu #menu=\"matMenu\">\n    <button mat-menu-item (click)=\"service.logout()\">\n      <mat-icon>exit_to_app</mat-icon>\n      <span>Cerrar Sesión</span>\n    </button>\n  </mat-menu>\n\n  <div *ngIf=\"!service.isLogin()\">\n    <button\n      mat-icon-button\n      matTooltip=\"Acceder al sistema\"\n      class=\"example-icon favorite-icon\"\n      routerLink=\"/login\"\n    >\n      <mat-icon>person</mat-icon>\n    </button>\n    <button\n      mat-icon-button\n      matTooltip=\"Poner Queja\"\n      class=\"example-icon favorite-icon\"\n      routerLink=\"/quejas\"\n    >\n      <mat-icon>create</mat-icon>\n    </button>\n  </div>\n</mat-toolbar>\n\n<mat-sidenav-container class=\"example-sidenav-container\">\n  <mat-sidenav opened=\"false\" #sidenav style=\"width: 200px\">\n    <button\n      mat-menu-item\n      (click)=\"sidenav.toggle()\"\n      routerLink=\"/filtroquejas\"\n      style=\"cursor: pointer\"\n    >\n      <mat-icon>label</mat-icon>\n      <span>Inicio</span>\n    </button>\n    <mat-divider></mat-divider>\n    <button\n      mat-menu-item\n      (click)=\"sidenav.toggle()\"\n      routerLink=\"/regiones\"\n      style=\"cursor: pointer\"\n    >\n      <mat-icon>label</mat-icon>\n      <span>Regiones</span>\n    </button>\n    <mat-divider></mat-divider>\n    <button\n      mat-menu-item\n      (click)=\"sidenav.toggle()\"\n      routerLink=\"/departamentos\"\n      style=\"cursor: pointer\"\n    >\n      <mat-icon>label</mat-icon>\n      <span>Departamentos</span>\n    </button>\n    <mat-divider></mat-divider>\n    <button\n      mat-menu-item\n      (click)=\"sidenav.toggle()\"\n      routerLink=\"/municipios\"\n      style=\"cursor: pointer\"\n    >\n      <mat-icon>label</mat-icon>\n      <span>Municipios</span>\n    </button>\n    <mat-divider></mat-divider>\n    <button\n      mat-menu-item\n      (click)=\"sidenav.toggle()\"\n      routerLink=\"/comercios\"\n      style=\"cursor: pointer\"\n    >\n      <mat-icon>label</mat-icon>\n      <span>Comercios</span>\n    </button>\n\n    <mat-divider></mat-divider>\n    <button\n      mat-menu-item\n      (click)=\"sidenav.toggle()\"\n      routerLink=\"/sucursales\"\n      style=\"cursor: pointer\"\n    >\n      <mat-icon>label</mat-icon>\n      <span>Sucursales</span>\n    </button>\n\n    <mat-divider></mat-divider>\n    <button\n      mat-menu-item\n      (click)=\"sidenav.toggle()\"\n      routerLink=\"/usuarios\"\n      style=\"cursor: pointer\"\n    >\n      <mat-icon>label</mat-icon>\n      <span>Usuarios</span>\n    </button>\n  </mat-sidenav>\n\n  <mat-sidenav-content>\n    <div class=\"container-dashboard\">\n      <router-outlet></router-outlet>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component } from '@angular/core';\nimport { WebServices } from './service/web.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'control-quejas-cf';\n\n  constructor(public service:WebServices){}\n}\n","import { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {  HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material.module';\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\nimport { LoginComponent } from './view/login/login.component';\nimport { QuejasComponent } from './view/quejas/quejas.component';\nimport { RegionesComponent } from './view/regiones/regiones.component';\nimport { RegionestecleoComponent } from './view/regiones/regionestecleo/regionestecleo.component';\nimport { DepartamentosComponent } from './view/departamentos/departamentos.component';\nimport { DepartamentostecleoComponent } from './view/departamentos/departamentostecleo/departamentostecleo.component';\nimport { MunicipiosComponent } from './view/municipios/municipios.component';\nimport { MunicipiostecleoComponent } from './view/municipios/municipiostecleo/municipiostecleo.component';\nimport { ComerciosComponent } from './view/comercios/comercios.component';\nimport { ComerciostecleoComponent } from './view/comercios/comerciostecleo/comerciostecleo.component';\nimport { SucursalesComponent } from './view/sucursales/sucursales.component';\nimport { SucursalestecleoComponent } from './view/sucursales/sucursalestecleo/sucursalestecleo.component';\nimport { UsuariosComponent } from './view/usuarios/usuarios.component';\nimport { InicioComponent } from './view/inicio/inicio.component';\nimport { FiltroquejasComponent } from './view/filtroquejas/filtroquejas.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    QuejasComponent,\n    RegionesComponent,\n    RegionestecleoComponent,\n    DepartamentosComponent,\n    DepartamentostecleoComponent,\n    MunicipiosComponent,\n    MunicipiostecleoComponent,\n    ComerciosComponent,\n    ComerciostecleoComponent,\n    SucursalesComponent,\n    SucursalestecleoComponent,\n    UsuariosComponent,\n    InicioComponent,\n    FiltroquejasComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  providers: [ {provide: LocationStrategy, useClass: HashLocationStrategy}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {CommonModule} from '@angular/common';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatCardModule} from '@angular/material/card';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatTreeModule} from '@angular/material/tree';\nimport {MatListModule} from '@angular/material/list';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {CdkAccordionModule} from '@angular/cdk/accordion';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport { NgModule } from '@angular/core';\n\n@NgModule({\n    declarations: [],\n    imports: [\n      CommonModule,\n      MatTableModule,\n      MatToolbarModule,\n      MatPaginatorModule,\n      MatButtonModule,\n      MatIconModule,\n      MatSortModule,\n      MatFormFieldModule,\n      MatInputModule,\n      MatCardModule,\n      ReactiveFormsModule,\n      MatSnackBarModule,\n      MatSidenavModule,\n      MatMenuModule,\n      MatDividerModule,\n      MatDialogModule,\n      MatSelectModule,\n      MatCheckboxModule,\n      MatSlideToggleModule,\n      MatTreeModule,\n      MatListModule,\n      MatStepperModule,\n      MatExpansionModule,\n      CdkAccordionModule,\n      MatDatepickerModule,\n      MatTooltipModule,\n      MatNativeDateModule,\n      MatGridListModule\n    ],\n    exports: [\n      MatTableModule,\n      MatToolbarModule,\n      MatPaginatorModule,\n      MatButtonModule,\n      MatIconModule,\n      MatSortModule,\n      MatFormFieldModule,\n      MatInputModule,\n      MatCardModule,\n      ReactiveFormsModule,\n      MatSnackBarModule,\n      MatSidenavModule,\n      MatMenuModule,\n      MatDividerModule,\n      MatDialogModule,\n      MatSelectModule,\n      MatCheckboxModule,\n      MatSlideToggleModule,\n      MatTreeModule,\n      MatListModule,\n      MatStepperModule,\n      MatExpansionModule,\n      CdkAccordionModule,\n      MatDatepickerModule,\n      MatTooltipModule,\n      MatNativeDateModule,\n      MatGridListModule\n    ]\n  })\n  export class MaterialModule { }\n  ","export class Comercios{\n    public id:number=0;\n    public descripcion:string=\"\";\n    public encargado:string=\"\";\n    public municipiosId:number=0;\n}","export class Departamentos{\n    public id :number=0;\n    public descripcion:string=\"\";\n    public regionesId:number=0;\n}","export class Municipios{\n    public id:number=0;\n    public descripcion:string=\"\";\n    public departamentosId:number=0;\n}","export class Quejas{\n    public id:number=0;\n    public descripcion:string=\"\";\n    public fecha:string=\"\";\n    public regionesId:number=0;\n    public departamentosId:number=0;\n    public municipiosId:number=0;\n    public comerciosId:number=0;\n    public sucursalId:number=0;\n\n}","export class Regiones{\n    public id:number=0;\n    public descripcion:string=\"\";\n}","export class Sucursales{\n    public id:number=0;\n    public descripcion:string=\"\";\n    public regionesId:number=0;\n    public departamentosId:number=0;\n    public municipiosId:number=0;\n    public comerciosId:number=0;\n}","export class Usuario{\n    public id:number=0;\n    public user:string=\"\";\n    public password:string=\"\";\n}","import { HttpClient, HttpHeaders, HttpParams } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { Comercios } from \"../model/comercios.model\";\nimport { Departamentos } from \"../model/departamentos.model\";\nimport { Municipios } from \"../model/municipios.model\";\nimport { Quejas } from \"../model/quejas.model\";\nimport { Regiones } from \"../model/regiones.model\";\nimport { Sucursales } from \"../model/sucursales.model\";\nimport { Usuario } from \"../model/usuario.model\";\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class WebServices {\n  \n    url = 'https://api-res-cf.herokuapp.com/api/';\n  \n    constructor(private http: HttpClient, private router: Router) { }\n    \n    //Usuarios\n    getUsuarios() : Observable<Usuario[]>{\n        return this.http.get<Usuario[]>(this.url+\"usuarios\");\n    }\n\n    getLogin(user:string,pass:string) : Observable<Usuario[]>{\n        return this.http.get<Usuario[]>(this.url+\"usuarios/\"+user+\"/\"+pass);\n    }\n    \n    postUsuario(usuario:Usuario):Observable<Usuario>{\n        var reqHeader = new HttpHeaders({\n            'Content-Type': 'application/json; charset=utf-8'\n          })\n\n        return this.http.post<Usuario>(this.url+\"usuarios\",JSON.stringify(usuario),{headers: reqHeader})\n    }\n\n    putUsuario(usuario:Usuario) : Observable<Usuario>{\n        var reqHeader = new HttpHeaders({\n            'Content-Type': 'application/json; charset=utf-8'\n          })\n        return this.http.put<Usuario>(this.url+\"usuarios/\"+usuario.id,JSON.stringify(usuario),{headers: reqHeader})\n    }\n    deleteUsuario(usuario:Usuario) : Observable<Usuario>{\n        return this.http.delete<Usuario>(this.url+\"usuarios/\"+usuario.id)\n    }\n\n\n    //Regiones\n    getRegiones() : Observable<Regiones[]>{\n        return this.http.get<Regiones[]>(this.url+\"regiones\");\n    }\n\n    getRegionesId(id:number) : Observable<Regiones[]>{\n        return this.http.get<Regiones[]>(this.url+\"regiones/\"+id);\n    }\n\n    postRegiones(data:Regiones): Observable<Regiones>{\n        var reqHeader = new HttpHeaders({\n            'Content-Type': 'application/json; charset=utf-8'\n          })\n\n        return this.http.post<Regiones>(this.url+\"regiones\",JSON.stringify(data),{headers: reqHeader})\n\n    }\n\n    putRegiones(data:Regiones) : Observable<string>{\n        var reqHeader = new HttpHeaders({\n            'Content-Type': 'application/json; charset=utf-8'\n          })\n\n        return this.http.put<string>(this.url+\"regiones/\"+data.id,JSON.stringify(data),{headers: reqHeader})\n    }\n\n    deleteRegiones(data:Regiones) : Observable<Regiones>{\n        return this.http.delete<Regiones>(this.url+\"regiones/\"+data.id)\n    }\n\n    //Deparamentos\n    getDepartamentos() : Observable<Departamentos[]>{\n        return this.http.get<Departamentos[]>(this.url+\"departamentos\");\n    }\n\n    getDepartamentosId(id:number) : Observable<Departamentos[]>{\n        return this.http.get<Departamentos[]>(this.url+\"departamentos/\"+id);\n    }\n\n    getDepartamentosRegionId(id:number) : Observable<Departamentos[]>{\n        return this.http.get<Departamentos[]>(this.url+\"departamentos/regiones/\"+id);\n    }\n\n    postDepartamentos(data:Departamentos): Observable<Departamentos>{\n        var reqHeader = new HttpHeaders({\n            'Content-Type': 'application/json; charset=utf-8'\n          })\n\n        return this.http.post<Departamentos>(this.url+\"departamentos\",JSON.stringify(data),{headers: reqHeader})\n\n    }\n\n    putDepartamentos(data:Regiones) : Observable<string>{\n        var reqHeader = new HttpHeaders({\n            'Content-Type': 'application/json; charset=utf-8'\n          })\n\n        return this.http.put<string>(this.url+\"departamentos/\"+data.id,JSON.stringify(data),{headers: reqHeader})\n    }\n\n    deleteDepartamentos(data:Regiones) : Observable<Regiones>{\n        return this.http.delete<Regiones>(this.url+\"departamentos/\"+data.id)\n    }\n\n\n    //Municipios\n    getMunicipios() : Observable<Municipios[]>{\n        return this.http.get<Municipios[]>(this.url+\"municipios\");\n    }\n\n    getMunicipioId(id:number) : Observable<Municipios[]>{\n        return this.http.get<Municipios[]>(this.url+\"municipios/\"+id);\n    }\n\n    getMunicipiosDepartamentosId(id:number) : Observable<Municipios[]>{\n        return this.http.get<Municipios[]>(this.url+\"municipios/departamentos/\"+id);\n    }\n\n    postMunicipio(data:Municipios): Observable<Municipios>{\n        var reqHeader = new HttpHeaders({\n            'Content-Type': 'application/json; charset=utf-8'\n          })\n\n        return this.http.post<Municipios>(this.url+\"municipios\",JSON.stringify(data),{headers: reqHeader})\n\n    }\n\n    putMunicipio(data:Municipios) : Observable<string>{\n        var reqHeader = new HttpHeaders({\n            'Content-Type': 'application/json; charset=utf-8'\n          })\n\n        return this.http.put<string>(this.url+\"municipios/\"+data.id,JSON.stringify(data),{headers: reqHeader})\n    }\n\n    deleteMunicipios(data:Municipios) : Observable<Municipios>{\n        return this.http.delete<Municipios>(this.url+\"municipios/\"+data.id)\n    }\n\n    //Comercios\n    getComercios() : Observable<Comercios[]>{\n        return this.http.get<Comercios[]>(this.url+\"comercios\");\n    }\n\n    getComerciosId(id:number) : Observable<Comercios[]>{\n        return this.http.get<Comercios[]>(this.url+\"comercios/\"+id);\n    }\n\n    getComerciosMunicipioId(id:number) : Observable<Comercios[]>{\n        return this.http.get<Comercios[]>(this.url+\"comercios/municipios/\"+id);\n    }\n\n    postComercios(data:Comercios): Observable<Comercios>{\n        var reqHeader = new HttpHeaders({\n            'Content-Type': 'application/json; charset=utf-8'\n          })\n\n        return this.http.post<Comercios>(this.url+\"comercios\",JSON.stringify(data),{headers: reqHeader})\n\n    }\n\n    putComercios(data:Comercios) : Observable<string>{\n        var reqHeader = new HttpHeaders({\n            'Content-Type': 'application/json; charset=utf-8'\n          })\n\n        return this.http.put<string>(this.url+\"comercios/\"+data.id,JSON.stringify(data),{headers: reqHeader})\n    }\n\n    deleteComercios(data:Comercios) : Observable<string>{\n        return this.http.delete<string>(this.url+\"comercios/\"+data.id)\n    }\n\n\n    //Sucursales\n    getSucursales() : Observable<Sucursales[]>{\n        return this.http.get<Sucursales[]>(this.url+\"sucursales\");\n    }\n\n    getSucursalId(id:number) : Observable<Sucursales[]>{\n        return this.http.get<Sucursales[]>(this.url+\"sucursales/\"+id);\n    }\n\n    getSucursalRegionesId(id:number) : Observable<Sucursales[]>{\n        return this.http.get<Sucursales[]>(this.url+\"sucursales/regiones/\"+id);\n    }\n\n    getSucursalDepartamentoId(id:number) : Observable<Sucursales[]>{\n        return this.http.get<Sucursales[]>(this.url+\"sucursales/departamentos/\"+id);\n    }\n\n    getSucursalMunicipiosId(id:number) : Observable<Sucursales[]>{\n        return this.http.get<Sucursales[]>(this.url+\"sucursales/municipios/\"+id);\n    }\n\n    getSucursalComerciosId(id:number) : Observable<Sucursales[]>{\n        return this.http.get<Sucursales[]>(this.url+\"sucursales/comercios/\"+id);\n    }\n\n    postSucursal(data:Sucursales): Observable<Sucursales>{\n        var reqHeader = new HttpHeaders({\n            'Content-Type': 'application/json; charset=utf-8'\n          })\n\n        return this.http.post<Sucursales>(this.url+\"sucursales\",JSON.stringify(data),{headers: reqHeader})\n\n    }\n\n    putSucursal(data:Sucursales) : Observable<string>{\n        var reqHeader = new HttpHeaders({\n            'Content-Type': 'application/json; charset=utf-8'\n          })\n\n        return this.http.put<string>(this.url+\"sucursales/\"+data.id,JSON.stringify(data),{headers: reqHeader})\n    }\n\n    deleteSucursal(data:Sucursales) : Observable<string>{\n        return this.http.delete<string>(this.url+\"sucursales/\"+data.id)\n    }\n\n    //Quejas\n\n    getQuejas() : Observable<Quejas[]>{\n        return this.http.get<Quejas[]>(this.url+\"quejas\");\n    }\n\n    getQuejasId(id:number) : Observable<Quejas[]>{\n        return this.http.get<Quejas[]>(this.url+\"quejas/\"+id);\n    }\n\n    getQuejasRegionesId(id:number) : Observable<Quejas[]>{\n        return this.http.get<Quejas[]>(this.url+\"quejas/regiones/\"+id);\n    }\n\n    getQuejasDepartamentoId(id:number) : Observable<Quejas[]>{\n        return this.http.get<Quejas[]>(this.url+\"quejas/departamentos/\"+id);\n    }\n\n    getQuejasMunicipiosId(id:number) : Observable<Quejas[]>{\n        return this.http.get<Quejas[]>(this.url+\"quejas/municipios/\"+id);\n    }\n\n    getQuejasComerciosId(id:number) : Observable<Quejas[]>{\n        return this.http.get<Quejas[]>(this.url+\"quejas/comercios/\"+id);\n    }\n\n    getQuejasSucursalId(id:number) : Observable<Quejas[]>{\n        return this.http.get<Quejas[]>(this.url+\"quejas/sucursal/\"+id);\n    }\n\n    postQuejas(data:Quejas): Observable<Quejas>{\n        var reqHeader = new HttpHeaders({\n            'Content-Type': 'application/json; charset=utf-8'\n          })\n\n        return this.http.post<Quejas>(this.url+\"quejas\",JSON.stringify(data),{headers: reqHeader})\n\n    }\n\n    putQuejas(data:Quejas) : Observable<string>{\n        var reqHeader = new HttpHeaders({\n            'Content-Type': 'application/json; charset=utf-8'\n          })\n\n        return this.http.put<string>(this.url+\"quejas/\"+data.id,JSON.stringify(data),{headers: reqHeader})\n    }\n\n    deleteQuejas(data:Quejas) : Observable<string>{\n        return this.http.delete<string>(this.url+\"quejas/\"+data.id)\n    }\n\n    //Verifica accesos\n    getAccesos() {\n        const token = sessionStorage.getItem('usuario') || '';\n        return JSON.parse(token).access_token;\n      }\n\n      login(usuario:Usuario){\n           let _usuario =  JSON.stringify(usuario);\n          sessionStorage.setItem('usuario', _usuario);\n          this.router.navigate(['graficas']);\n      }\n    \n      logout() {\n        sessionStorage.clear();\n        this.router.navigate(['inicio']);\n      }\n    \n      isLogin(){\n        let token = sessionStorage.getItem('usuario');\n        return token != null;\n      }\n\n      validaLogin(){\n          if(!this.isLogin()){\n                this.logout()\n          }\n      }\n}\n\n","<section>\n  <div class=\"example-label\"><h2>Comercios</h2></div>\n  <div class=\"example-button-row\">\n    <div class=\"example-flex-container\">\n      <mat-form-field\n        appearance=\"standard\"\n        [style.width.%]=\"100\"\n        [style.margin-right.%]=\"2\"\n        [style.margin-left.%]=\"2\"\n      >\n        <mat-label>Seleccione Municipio</mat-label>\n        <mat-select [(ngModel)]=\"municipiosId\">\n          <mat-option>Todos</mat-option>\n          <mat-option *ngFor=\"let c of _datosMunicipios\" [value]=\"c.id\">\n            {{ c.descripcion }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <div class=\"example-button-container\">\n        <button mat-fab color=\"primary\" style=\"float: right\" (click)=\"grabar()\">\n          <mat-icon>add</mat-icon>\n        </button>\n      </div>\n      <div class=\"example-button-container\">\n        <button mat-fab color=\"primary\" style=\"float: right\" (click)=\"buscar()\">\n          <mat-icon>search</mat-icon>\n        </button>\n      </div>\n    </div>\n  </div>\n</section>\n\n<div>\n  <mat-card style=\"margin: 1em\" *ngFor=\"let element of _datos\">\n    <mat-card-header>\n      <mat-card-title>{{ \"Comercios: \" + element.descripcion }}</mat-card-title>\n      <mat-card-subtitle></mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n      <div></div>\n    </mat-card-content>\n    <mat-card-actions align=\"end\">\n      <button mat-icon-button color=\"warn\" (click)=\"eliminar(element)\">\n        <mat-icon>delete</mat-icon>\n      </button>\n      <button mat-icon-button color=\"primary\" (click)=\"modificar(element)\">\n        <mat-icon>mode_edit</mat-icon>\n      </button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Comercios } from 'src/app/model/comercios.model';\nimport { Municipios } from 'src/app/model/municipios.model';\nimport { WebServices } from 'src/app/service/web.service';\n\n@Component({\n  selector: 'app-comercios',\n  templateUrl: './comercios.component.html',\n  styleUrls: ['./comercios.component.css']\n})\nexport class ComerciosComponent implements OnInit {\n\n  public _datos:Comercios[]= [];\n  public _datosMunicipios:Municipios[]= [];\n  public municipiosId:number=0;\n\n  constructor(private service:WebServices,private snackBar: MatSnackBar,private router: Router,public rutaActiva: ActivatedRoute) { \n    this.service.validaLogin()\n    this.buscar();\n  }\n\n  ngOnInit(): void {\n    this.setFiltros()\n  }\n\n\n  buscar(){\n    if(this.municipiosId != undefined && this.municipiosId>0){\n      this.service.getComerciosMunicipioId(this.municipiosId).subscribe(data =>{\n        this._datos=data;\n      })\n    }else{\n      this.service.getComercios().subscribe(data => {\n        this._datos=data\n \n      });\n    }\n    \n  }\n\n  grabar(){\n    this.router.navigate(['./comerciostecleo',0], { relativeTo: this.rutaActiva });\n  }\n\n  modificar(data:Comercios){\n    this.router.navigate(['./comerciostecleo',data.id], { relativeTo: this.rutaActiva });\n  }\n\n  eliminar(data:Comercios){\n    const respuesta = confirm(\"¿Esta seguro que desea eliminar el registro?. Ya no podra recuperarlo.\");\n    if (respuesta) {\n      \n      this.service.deleteComercios(data).subscribe(()=>{\n        this.buscar()\n      })\n    }\n  }\n\n  setFiltros(){\n    this.service.getMunicipios().subscribe(data=>{\n      this._datosMunicipios = data;\n    })\n  }\n\n\n}\n","<div class=\"main-div\">\n  <mat-card class=\"example-card\">\n    <mat-card-title>Comercios Tecleo</mat-card-title>\n    <mat-card-subtitle>ingreso de comercios</mat-card-subtitle>\n    <mat-card-content>\n      <div>\n        <mat-form-field appearance=\"standard\" [style.width.%]=\"100\">\n          <mat-label>Seleccione Municipio</mat-label>\n          <mat-select [(ngModel)]=\"cls.municipiosId\" required>\n            <mat-option *ngFor=\"let c of _datosMunicipios\" [value]=\"c.id\">\n              {{ c.descripcion }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"standard\" [style.width.%]=\"100\">\n          <mat-label>Descripcion</mat-label>\n          <input\n            matInput\n            type=\"text\"\n            placeholder=\"Ingrese la descripcion de region\"\n            [(ngModel)]=\"cls.descripcion\"\n            requiere\n          />\n        </mat-form-field>\n      </div>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-raised-button color=\"warn\" (click)=\"cerrar()\">\n        Cancelar\n      </button>\n      <button mat-raised-button color=\"primary\" (click)=\"grabar()\">\n        Grabar\n      </button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Comercios } from 'src/app/model/comercios.model';\nimport { Municipios } from 'src/app/model/municipios.model';\nimport { WebServices } from 'src/app/service/web.service';\n\n@Component({\n  selector: 'app-comerciostecleo',\n  templateUrl: './comerciostecleo.component.html',\n  styleUrls: ['./comerciostecleo.component.css']\n})\nexport class ComerciostecleoComponent implements OnInit {\n\n  id:number=0;\n  public cls = new  Comercios();\n  public _datosMunicipios:Municipios[]= [];\n  \n  constructor(private service:WebServices,private snackBar: MatSnackBar,private router: Router,public rutaActiva: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.setFiltros();\n    this.obtenerDatos(this.rutaActiva.snapshot.params.Id);    \n  } \n\n  cerrar() {\n    this.router.navigate(['/comercios'], { relativeTo: this.rutaActiva });\n  }\n\n  grabar(){\n\n    if(this.cls.id ==0){\n      this.service.postComercios(this.cls).subscribe(data =>{\n        this.snackBar.open('Registro grabado', '', {\n          duration: 4000,\n        });\n        this.cerrar();\n      })\n    }else{\n      this.service.putComercios(this.cls).subscribe(data =>{\n        this.snackBar.open('Registro modificado', '', {\n          duration: 4000,\n        });\n        this.cerrar();\n      })\n    }\n    \n  }\n\n  obtenerDatos(id:number){\n    if(id>0){\n      this.service.getComerciosId(id).subscribe(data =>{\n        this.cls=data[0];      \n      })\n    }\n    \n  }\n\n  setFiltros(){\n    this.service.getMunicipios().subscribe(data=>{\n      this._datosMunicipios = data;\n    })\n  }\n\n}\n","<section>\n  <div class=\"example-label\"><h2>Departamentos</h2></div>\n  <div class=\"example-button-row\">\n    <div class=\"example-flex-container\">\n      <mat-form-field\n        appearance=\"standard\"\n        [style.width.%]=\"100\"\n        [style.margin-right.%]=\"2\"\n        [style.margin-left.%]=\"2\"\n      >\n        <mat-label>Seleccione Region</mat-label>\n        <mat-select [(ngModel)]=\"regionesId\">\n          <mat-option>Todos</mat-option>\n          <mat-option *ngFor=\"let c of _datosRegion\" [value]=\"c.id\">\n            {{ c.descripcion }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <div class=\"example-button-container\">\n        <button mat-fab color=\"primary\" style=\"float: right\" (click)=\"grabar()\">\n          <mat-icon>add</mat-icon>\n        </button>\n      </div>\n      <div class=\"example-button-container\">\n        <button mat-fab color=\"primary\" style=\"float: right\" (click)=\"buscar()\">\n          <mat-icon>search</mat-icon>\n        </button>\n      </div>\n    </div>\n  </div>\n</section>\n\n<div>\n  <mat-card style=\"margin: 1em\" *ngFor=\"let element of _datos\">\n    <mat-card-header>\n      <mat-card-title>{{\n        \"Departamento: \" + element.descripcion\n      }}</mat-card-title>\n      <mat-card-subtitle></mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n      <div></div>\n    </mat-card-content>\n    <mat-card-actions align=\"end\">\n      <button mat-icon-button color=\"warn\" (click)=\"eliminar(element)\">\n        <mat-icon>delete</mat-icon>\n      </button>\n      <button mat-icon-button color=\"primary\" (click)=\"modificar(element)\">\n        <mat-icon>mode_edit</mat-icon>\n      </button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Departamentos } from 'src/app/model/departamentos.model';\nimport { Regiones } from 'src/app/model/regiones.model';\nimport { WebServices } from 'src/app/service/web.service';\n\n@Component({\n  selector: 'app-departamentos',\n  templateUrl: './departamentos.component.html',\n  styleUrls: ['./departamentos.component.css']\n})\nexport class DepartamentosComponent implements OnInit {\n\n  public cls= new Departamentos();\n  public _datos:Departamentos[]= [];\n  public _datosRegion:Regiones[]= [];\n  public regionesId:number=0;\n\n  constructor(private service:WebServices,private snackBar: MatSnackBar,private router: Router,public rutaActiva: ActivatedRoute) { \n    this.service.validaLogin()\n    this.buscar();\n  }\n\n  ngOnInit(): void {\n    this.setFiltros()\n  }\n\n\n  buscar(){\n    if(this.regionesId != undefined && this.regionesId>0){\n      this.service.getDepartamentosRegionId(this.regionesId).subscribe(data =>{\n        this._datos=data;\n      })\n    }else{\n      this.service.getDepartamentos().subscribe(data => {\n        this._datos=data\n \n      });\n    }\n    \n  }\n\n  grabar(){\n    this.router.navigate(['./departamentostecleo',0], { relativeTo: this.rutaActiva });\n  }\n\n  modificar(data:Departamentos){\n    this.router.navigate(['./departamentostecleo',data.id], { relativeTo: this.rutaActiva });\n  }\n\n  eliminar(data:Departamentos){\n    const respuesta = confirm(\"¿Esta seguro que desea eliminar el registro?. Ya no podra recuperarlo.\");\n    if (respuesta) {\n      \n      this.service.deleteDepartamentos(data).subscribe(()=>{\n        this.buscar()\n      })\n    }\n  }\n\n  setFiltros(){\n    this.service.getRegiones().subscribe(data=>{\n      this._datosRegion = data;\n    })\n  }\n\n}\n","<div class=\"main-div\">\n  <mat-card class=\"example-card\">\n    <mat-card-title>Departamentos Tecleo</mat-card-title>\n    <mat-card-subtitle>ingreso de departamentos</mat-card-subtitle>\n    <mat-card-content>\n      <div>\n        <mat-form-field appearance=\"standard\" [style.width.%]=\"100\">\n          <mat-label>Seleccione Region</mat-label>\n          <mat-select [(ngModel)]=\"cls.regionesId\" required>\n            <mat-option *ngFor=\"let c of _datosRegion\" [value]=\"c.id\">\n              {{ c.descripcion }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"standard\" [style.width.%]=\"100\">\n          <mat-label>Descripcion</mat-label>\n          <input\n            matInput\n            type=\"text\"\n            placeholder=\"Ingrese la descripcion de region\"\n            [(ngModel)]=\"cls.descripcion\"\n            requiere\n          />\n        </mat-form-field>\n      </div>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-raised-button color=\"warn\" (click)=\"cerrar()\">\n        Cancelar\n      </button>\n      <button mat-raised-button color=\"primary\" (click)=\"grabar()\">\n        Grabar\n      </button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Departamentos } from 'src/app/model/departamentos.model';\nimport { Regiones } from 'src/app/model/regiones.model';\nimport { WebServices } from 'src/app/service/web.service';\n\n@Component({\n  selector: 'app-departamentostecleo',\n  templateUrl: './departamentostecleo.component.html',\n  styleUrls: ['./departamentostecleo.component.css']\n})\nexport class DepartamentostecleoComponent implements OnInit {\n\n  id:number=0;\n  public cls = new  Departamentos();\n  public _datosRegion:Regiones[]= [];\n  \n  constructor(private service:WebServices,private snackBar: MatSnackBar,private router: Router,public rutaActiva: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.setFiltros();\n    this.obtenerDatos(this.rutaActiva.snapshot.params.Id);    \n  } \n\n  cerrar() {\n    this.router.navigate(['/departamentos'], { relativeTo: this.rutaActiva });\n  }\n\n  grabar(){\n\n    if(this.cls.id ==0){\n      this.service.postDepartamentos(this.cls).subscribe(data =>{\n        this.snackBar.open('Registro grabado', '', {\n          duration: 4000,\n        });\n        this.cerrar();\n      })\n    }else{\n      this.service.putDepartamentos(this.cls).subscribe(data =>{\n        this.snackBar.open('Registro modificado', '', {\n          duration: 4000,\n        });\n        this.cerrar();\n      })\n    }\n    \n  }\n\n  obtenerDatos(id:number){\n    if(id>0){\n      this.service.getDepartamentosId(id).subscribe(data =>{\n        this.cls=data[0];      \n      })\n    }\n    \n  }\n\n  setFiltros(){\n    this.service.getRegiones().subscribe(data=>{\n      this._datosRegion = data;\n    })\n  }\n}\n","<section>\n  <div class=\"example-label\"><h2>Quejas</h2></div>\n  <div class=\"example-button-row\">\n    <div class=\"example-flex-container\">\n      <mat-form-field\n        appearance=\"standard\"\n        [style.width.%]=\"100\"\n        [style.margin-right.%]=\"2\"\n        [style.margin-left.%]=\"2\"\n      >\n        <mat-label>Seleccione Region</mat-label>\n        <mat-select\n          [(ngModel)]=\"regionesId\"\n          (selectionChange)=\"selectionChangeRegion()\"\n        >\n          <mat-option>Todos</mat-option>\n          <mat-option *ngFor=\"let c of _datosRegion\" [value]=\"c.id\">\n            {{ c.descripcion }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <mat-form-field\n        appearance=\"standard\"\n        [style.width.%]=\"100\"\n        [style.margin-right.%]=\"2\"\n        [style.margin-left.%]=\"2\"\n      >\n        <mat-label>Seleccione Departamento</mat-label>\n        <mat-select [(ngModel)]=\"departamentosId\">\n          <mat-option>Todos</mat-option>\n          <mat-option *ngFor=\"let c of _datosDepartamentos\" [value]=\"c.id\">\n            {{ c.descripcion }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <div class=\"example-button-container\">\n        <button\n          mat-fab\n          color=\"primary\"\n          style=\"float: right\"\n          routerLink=\"/quejas\"\n        >\n          <mat-icon>add</mat-icon>\n        </button>\n      </div>\n      <div class=\"example-button-container\">\n        <button mat-fab color=\"primary\" style=\"float: right\" (click)=\"buscar()\">\n          <mat-icon>search</mat-icon>\n        </button>\n      </div>\n    </div>\n  </div>\n</section>\n\n<div>\n  <mat-card style=\"margin: 1em\" *ngFor=\"let element of _datos\">\n    <mat-card-header>\n      <mat-card-title>{{ \"Queja: \" + element.descripcion }}</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <div></div>\n    </mat-card-content>\n    <mat-card-actions align=\"end\">\n      <mat-card-subtitle>{{ element.fecha }}</mat-card-subtitle>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Departamentos } from 'src/app/model/departamentos.model';\nimport { Quejas } from 'src/app/model/quejas.model';\nimport { Regiones } from 'src/app/model/regiones.model';\nimport { WebServices } from 'src/app/service/web.service';\n\n@Component({\n  selector: 'app-filtroquejas',\n  templateUrl: './filtroquejas.component.html',\n  styleUrls: ['./filtroquejas.component.css']\n})\nexport class FiltroquejasComponent implements OnInit {\n  public _datos:Quejas[]= [];\n\n  public _datosRegion:Regiones[]= [];\n  public regionesId:number=0;\n\n  public _datosDepartamentos:Departamentos[]= [];\n  public departamentosId:number=0;\n\n  constructor(private service:WebServices,private snackBar: MatSnackBar,private router: Router,public rutaActiva: ActivatedRoute) { \n    this.service.validaLogin()\n    this.buscar();\n  }\n\n  ngOnInit(): void {\n    this.setFiltros()\n  }\n\n\n  buscar(){\n    if(this.departamentosId != undefined && this.departamentosId>0){\n      this.service.getQuejasDepartamentoId(this.departamentosId).subscribe(data =>{\n        this._datos=data;\n      })\n    }else if(this.regionesId != undefined && this.regionesId>0){\n      this.service.getQuejasRegionesId(this.regionesId).subscribe(data =>{\n        this._datos=data;\n      })\n    }else{\n      this.service.getQuejas().subscribe(data => {\n        console.log(data)\n        this._datos=data\n \n      });\n    }\n    \n  }\n \n  setFiltros(){\n    this.service.getRegiones().subscribe(data=>{\n      this._datosRegion = data;\n    })\n  }\n\n  selectionChangeRegion(){\n    if(this.regionesId !=undefined && this.regionesId >0){\n      this.service.getDepartamentosRegionId(this.regionesId).subscribe(data=>{\n        this._datosDepartamentos = data\n      })\n    }\n   \n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-inicio',\n  templateUrl: './inicio.component.html',\n  styleUrls: ['./inicio.component.css']\n})\nexport class InicioComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"main-div\">\n  <mat-card class=\"example-card\">\n    <mat-card-header>\n      <div mat-card-avatar class=\"example-header-image\"></div>\n      <mat-card-title>Cesar Anibal Franco Lucas</mat-card-title>\n      <mat-card-subtitle>0908-09-5545</mat-card-subtitle>\n    </mat-card-header>\n    <img\n      mat-card-image\n      src=\"../../../assets/umg.jpg\"\n      alt=\"Photo of a Shiba Inu\"\n    />\n    <mat-card-content>\n      <p></p>\n    </mat-card-content>\n    <mat-card-actions> </mat-card-actions>\n  </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Usuario } from 'src/app/model/usuario.model';\nimport { WebServices } from 'src/app/service/web.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  hide = true;\n  public usuario= new Usuario();\n\n  constructor(private service:WebServices,private snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n  }\n\n\n  ingresar(){\n\n    if(this.usuario.user != '' && this.usuario.password != '' ){\n      this.service.getLogin(this.usuario.user,this.usuario.password).subscribe(data=>{\n\n        if(data[0]){\n          this.service.login(data[0]);\n        }else{\n          this.snackBar.open('Usuario o Contraseña no correcta, verifique', '', {\n            duration: 4000,\n          });\n        }\n      })\n    }else{\n      this.snackBar.open('Usuario o Contraseña requerida', '', {\n        duration: 4000,\n      });\n    }\n    \n  }\n\n}\n","<div class=\"main-div\">\n  <mat-card class=\"example-card\">\n    <mat-card-header>\n      <div mat-card-avatar class=\"example-header-image\"></div>\n      <mat-card-title>Login</mat-card-title>\n      <mat-card-subtitle>Ingrese su usuario y contraseña</mat-card-subtitle>\n    </mat-card-header>\n\n    <mat-card-content>\n      <mat-form-field appearance=\"standard\" [style.width.%]=\"100\">\n        <mat-label>Usuario</mat-label>\n        <input\n          matInput\n          type=\"text\"\n          placeholder=\"Ingrese el usuario\"\n          [(ngModel)]=\"usuario.user\"\n          requiere\n        />\n        <mat-icon matSuffix>person</mat-icon>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"standard\" [style.width.%]=\"100\">\n        <mat-label>Contraseña</mat-label>\n        <input\n          matInput\n          [type]=\"hide ? 'password' : 'text'\"\n          placeholder=\"Ingrese la contraseña\"\n          [(ngModel)]=\"usuario.password\"\n          require\n        />\n\n        <button\n          mat-icon-button\n          matSuffix\n          (click)=\"hide = !hide\"\n          [attr.aria-label]=\"'Hide password'\"\n          [attr.aria-pressed]=\"hide\"\n        >\n          <mat-icon>{{ hide ? \"visibility_off\" : \"visibility\" }}</mat-icon>\n        </button>\n      </mat-form-field>\n    </mat-card-content>\n    <mat-card-actions>\n      <button\n        mat-raised-button\n        color=\"primary\"\n        (click)=\"ingresar()\"\n        [style.width.%]=\"100\"\n      >\n        <span>INGRESAR</span>\n      </button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","<section>\n  <div class=\"example-label\"><h2>Municipios</h2></div>\n  <div class=\"example-button-row\">\n    <div class=\"example-flex-container\">\n      <mat-form-field\n        appearance=\"standard\"\n        [style.width.%]=\"100\"\n        [style.margin-right.%]=\"2\"\n        [style.margin-left.%]=\"2\"\n      >\n        <mat-label>Seleccione Departamento</mat-label>\n        <mat-select [(ngModel)]=\"departamentosId\">\n          <mat-option>Todos</mat-option>\n          <mat-option *ngFor=\"let c of _datosDepartamentos\" [value]=\"c.id\">\n            {{ c.descripcion }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <div class=\"example-button-container\">\n        <button mat-fab color=\"primary\" style=\"float: right\" (click)=\"grabar()\">\n          <mat-icon>add</mat-icon>\n        </button>\n      </div>\n      <div class=\"example-button-container\">\n        <button mat-fab color=\"primary\" style=\"float: right\" (click)=\"buscar()\">\n          <mat-icon>search</mat-icon>\n        </button>\n      </div>\n    </div>\n  </div>\n</section>\n\n<div>\n  <mat-card style=\"margin: 1em\" *ngFor=\"let element of _datos\">\n    <mat-card-header>\n      <mat-card-title>{{\n        \"Municipios: \" + element.descripcion\n      }}</mat-card-title>\n      <mat-card-subtitle></mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n      <div></div>\n    </mat-card-content>\n    <mat-card-actions align=\"end\">\n      <button mat-icon-button color=\"warn\" (click)=\"eliminar(element)\">\n        <mat-icon>delete</mat-icon>\n      </button>\n      <button mat-icon-button color=\"primary\" (click)=\"modificar(element)\">\n        <mat-icon>mode_edit</mat-icon>\n      </button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Departamentos } from 'src/app/model/departamentos.model';\nimport { Municipios } from 'src/app/model/municipios.model';\nimport { WebServices } from 'src/app/service/web.service';\n\n@Component({\n  selector: 'app-municipios',\n  templateUrl: './municipios.component.html',\n  styleUrls: ['./municipios.component.css']\n})\nexport class MunicipiosComponent implements OnInit {\n\n  public _datos:Municipios[]= [];\n  public _datosDepartamentos:Departamentos[]= [];\n  public departamentosId:number=0;\n\n  constructor(private service:WebServices,private snackBar: MatSnackBar,private router: Router,public rutaActiva: ActivatedRoute) { \n    this.service.validaLogin()\n    this.buscar();\n  }\n\n  ngOnInit(): void {\n    this.setFiltros()\n  }\n\n\n  buscar(){\n    if(this.departamentosId != undefined && this.departamentosId>0){\n      this.service.getMunicipiosDepartamentosId(this.departamentosId).subscribe(data =>{\n        this._datos=data;\n      })\n    }else{\n      this.service.getMunicipios().subscribe(data => {\n        this._datos=data\n \n      });\n    }\n    \n  }\n\n  grabar(){\n    this.router.navigate(['./municipiostecleo',0], { relativeTo: this.rutaActiva });\n  }\n\n  modificar(data:Municipios){\n    this.router.navigate(['./municipiostecleo',data.id], { relativeTo: this.rutaActiva });\n  }\n\n  eliminar(data:Municipios){\n    const respuesta = confirm(\"¿Esta seguro que desea eliminar el registro?. Ya no podra recuperarlo.\");\n    if (respuesta) {\n      \n      this.service.deleteMunicipios(data).subscribe(()=>{\n        this.buscar()\n      })\n    }\n  }\n\n  setFiltros(){\n    this.service.getDepartamentos().subscribe(data=>{\n      this._datosDepartamentos = data;\n    })\n  }\n\n}\n","<div class=\"main-div\">\n  <mat-card class=\"example-card\">\n    <mat-card-title>Municipios Tecleo</mat-card-title>\n    <mat-card-subtitle>ingreso de municipios</mat-card-subtitle>\n    <mat-card-content>\n      <div>\n        <mat-form-field appearance=\"standard\" [style.width.%]=\"100\">\n          <mat-label>Seleccione Departamento</mat-label>\n          <mat-select [(ngModel)]=\"cls.departamentosId\" required>\n            <mat-option *ngFor=\"let c of _datosDepartamentos\" [value]=\"c.id\">\n              {{ c.descripcion }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"standard\" [style.width.%]=\"100\">\n          <mat-label>Descripcion</mat-label>\n          <input\n            matInput\n            type=\"text\"\n            placeholder=\"Ingrese la descripcion de region\"\n            [(ngModel)]=\"cls.descripcion\"\n            requiere\n          />\n        </mat-form-field>\n      </div>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-raised-button color=\"warn\" (click)=\"cerrar()\">\n        Cancelar\n      </button>\n      <button mat-raised-button color=\"primary\" (click)=\"grabar()\">\n        Grabar\n      </button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Departamentos } from 'src/app/model/departamentos.model';\nimport { Municipios } from 'src/app/model/municipios.model';\nimport { WebServices } from 'src/app/service/web.service';\n\n@Component({\n  selector: 'app-municipiostecleo',\n  templateUrl: './municipiostecleo.component.html',\n  styleUrls: ['./municipiostecleo.component.css']\n})\nexport class MunicipiostecleoComponent implements OnInit {\n\n  id:number=0;\n  public cls = new  Municipios();\n  public _datosDepartamentos:Departamentos[]= [];\n  \n  constructor(private service:WebServices,private snackBar: MatSnackBar,private router: Router,public rutaActiva: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.setFiltros();\n    this.obtenerDatos(this.rutaActiva.snapshot.params.Id);    \n  } \n\n  cerrar() {\n    this.router.navigate(['/municipios'], { relativeTo: this.rutaActiva });\n  }\n\n  grabar(){\n\n    if(this.cls.id ==0){\n      this.service.postMunicipio(this.cls).subscribe(data =>{\n        this.snackBar.open('Registro grabado', '', {\n          duration: 4000,\n        });\n        this.cerrar();\n      })\n    }else{\n      this.service.putMunicipio(this.cls).subscribe(data =>{\n        this.snackBar.open('Registro modificado', '', {\n          duration: 4000,\n        });\n        this.cerrar();\n      })\n    }\n    \n  }\n\n  obtenerDatos(id:number){\n    if(id>0){\n      this.service.getMunicipioId(id).subscribe(data =>{\n        this.cls=data[0];      \n      })\n    }\n    \n  }\n\n  setFiltros(){\n    this.service.getDepartamentos().subscribe(data=>{\n      this._datosDepartamentos = data;\n    })\n  }\n}\n","<div class=\"main-div\">\n  <mat-card class=\"example-card\">\n    <mat-card-header>\n      <div mat-card-avatar class=\"example-header-image\"></div>\n      <mat-card-title>Ingrese su queja</mat-card-title>\n      <mat-card-subtitle></mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n      <mat-form-field appearance=\"standard\" [style.width.%]=\"100\">\n        <mat-label>Seleccione Departamento</mat-label>\n        <mat-select\n          [(ngModel)]=\"departamentosId\"\n          (selectionChange)=\"selectionChangeDepartamento()\"\n          required\n        >\n          <mat-option *ngFor=\"let c of _datosDepartamentos\" [value]=\"c.id\">\n            {{ c.descripcion }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"standard\" [style.width.%]=\"100\">\n        <mat-label>Seleccione Municipio</mat-label>\n        <mat-select\n          [(ngModel)]=\"municipiosId\"\n          (selectionChange)=\"selectionChangeMunicipio()\"\n          required\n        >\n          <mat-option *ngFor=\"let c of _datosMunicipios\" [value]=\"c.id\">\n            {{ c.descripcion }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"standard\" [style.width.%]=\"100\">\n        <mat-label>Seleccione Comercio</mat-label>\n        <mat-select\n          [(ngModel)]=\"comerciosId\"\n          (selectionChange)=\"selectionChangeComercio()\"\n          required\n        >\n          <mat-option *ngFor=\"let c of _datosComercios\" [value]=\"c.id\">\n            {{ c.descripcion }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"standard\" [style.width.%]=\"100\">\n        <mat-label>Seleccione Sucursal</mat-label>\n        <mat-select [(ngModel)]=\"sucursalesId\" required>\n          <mat-option *ngFor=\"let c of _datosSucursales\" [value]=\"c.id\">\n            {{ c.descripcion }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"standard\" [style.width.%]=\"100\">\n        <mat-label>Ingrese Queja</mat-label>\n        <textarea\n          matInput\n          [(ngModel)]=\"cls.descripcion\"\n          placeholder=\"Explique los mas breve y conciso posible su queja\"\n        ></textarea>\n      </mat-form-field>\n    </mat-card-content>\n    <mat-card-actions>\n      <button\n        mat-raised-button\n        color=\"primary\"\n        (click)=\"grabar()\"\n        [style.width.%]=\"100\"\n      >\n        <span>GRABAR</span>\n      </button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","import { DatePipe } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Comercios } from 'src/app/model/comercios.model';\nimport { Departamentos } from 'src/app/model/departamentos.model';\nimport { Municipios } from 'src/app/model/municipios.model';\nimport { Quejas } from 'src/app/model/quejas.model';\nimport { Sucursales } from 'src/app/model/sucursales.model';\nimport { WebServices } from 'src/app/service/web.service';\n\n@Component({\n  selector: 'app-quejas',\n  templateUrl: './quejas.component.html',\n  styleUrls: ['./quejas.component.css'],\n  providers:[DatePipe]\n})\nexport class QuejasComponent implements OnInit {\n\n  public cls = new Quejas();\n\n  public _datosDepartamentos:Departamentos[]= [];\n  public departamentosId:number=0;\n\n  public _datosMunicipios:Municipios[]= [];\n  public municipiosId:number=0;\n\n  public _datosComercios:Comercios[]= [];\n  public comerciosId:number=0;\n\n  public _datosSucursales:Sucursales[]= [];\n  public sucursalesId:number=0;\n\n  constructor(private service:WebServices,private snackBar: MatSnackBar,private router: Router,public rutaActiva: ActivatedRoute,private  datePipe: DatePipe) { \n\n  }\n\n  ngOnInit(): void {\n    this.setFiltros()\n  }\n\n  grabar(){\n\n    if(this.departamentosId >0 \n      && this.municipiosId >0 \n      && this.comerciosId >0\n      && this.sucursalesId >0\n      && this.cls.descripcion != ''\n       ){\n\n        \n    \n        this.service.getDepartamentosId(this.departamentosId).subscribe(data=>{\n          \n          this.cls.regionesId = data[0].regionesId\n          this.cls.departamentosId = data[0].id \n          this.cls.municipiosId = this.municipiosId\n          this.cls.comerciosId = this.comerciosId\n          this.cls.sucursalId = this.sucursalesId\n          this.cls.fecha = this.datePipe.transform(new Date(),\"dd/MM/yyyy\") || \"01/01/2021\"\n          console.log(this.cls)\n          this.service.postQuejas(this.cls).subscribe(data=>{\n            this.snackBar.open('Queja grabada correctamente', '', {\n              duration: 4000,\n            });\n\n            this.cls = new Quejas();\n\n          })\n        })\n       }else{\n        this.snackBar.open('Todos los campos son obligatorios, verifique.', '', {\n          duration: 4000,\n        });\n       }\n  \n\n  }\n\n\n  setFiltros(){\n    this.service.getDepartamentos().subscribe(data=>{\n      this._datosDepartamentos = data;\n    })\n  }\n\n  selectionChangeDepartamento(){\n    this.service.getMunicipiosDepartamentosId(this.departamentosId).subscribe(data=>{\n      this._datosMunicipios = data;\n    })\n  }\n\n  selectionChangeMunicipio(){\n    this.service.getComerciosMunicipioId(this.municipiosId).subscribe(data=>{\n      this._datosComercios = data;\n    })\n  }\n\n  selectionChangeComercio(){\n    this.service.getSucursalComerciosId(this.municipiosId).subscribe(data=>{\n      this._datosSucursales = data;\n    })\n  }\n}\n","<section>\n  <div class=\"example-label\"><h2>Regiones</h2></div>\n  <div class=\"example-button-row\">\n    <div class=\"example-flex-container\">\n      <div class=\"example-button-container\">\n        <button mat-fab color=\"primary\" style=\"float: right\" (click)=\"grabar()\">\n          <mat-icon>add</mat-icon>\n        </button>\n      </div>\n      <div class=\"example-button-container\">\n        <button mat-fab color=\"primary\" style=\"float: right\" (click)=\"buscar()\">\n          <mat-icon>search</mat-icon>\n        </button>\n      </div>\n    </div>\n  </div>\n</section>\n\n<div>\n  <mat-card style=\"margin: 1em\" *ngFor=\"let element of _datos\">\n    <mat-card-header>\n      <mat-card-title>{{ \"Region: \" + element.descripcion }}</mat-card-title>\n      <mat-card-subtitle></mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n      <div></div>\n    </mat-card-content>\n    <mat-card-actions align=\"end\">\n      <button mat-icon-button color=\"warn\" (click)=\"eliminar(element)\">\n        <mat-icon>delete</mat-icon>\n      </button>\n      <button mat-icon-button color=\"primary\" (click)=\"modificar(element)\">\n        <mat-icon>mode_edit</mat-icon>\n      </button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Regiones } from 'src/app/model/regiones.model';\nimport { WebServices } from 'src/app/service/web.service';\n\n@Component({\n  selector: 'app-regiones',\n  templateUrl: './regiones.component.html',\n  styleUrls: ['./regiones.component.css']\n})\nexport class RegionesComponent implements OnInit {\n  \n  public regiones= new Regiones();\n  public _datos:Regiones[]= [];\n\n  constructor(private service:WebServices,private snackBar: MatSnackBar,private router: Router,public rutaActiva: ActivatedRoute) { \n    this.service.validaLogin()\n    this.buscar();\n  }\n\n  ngOnInit(): void {\n  }\n\n\n  buscar(){\n    this.service.getRegiones().subscribe(data => this._datos=data);\n  }\n\n  grabar(){\n    this.router.navigate(['./regionestecleo',0], { relativeTo: this.rutaActiva });\n  }\n\n  modificar(data:Regiones){\n    this.router.navigate(['./regionestecleo',data.id], { relativeTo: this.rutaActiva });\n  }\n\n  eliminar(data:Regiones){\n    const respuesta = confirm(\"¿Esta seguro que desea eliminar el registro?. Ya no podra recuperarlo.\");\n    if (respuesta) {\n      \n      this.service.deleteRegiones(data).subscribe(()=>{\n        this.buscar()\n      })\n    }\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router ,Params} from '@angular/router';\nimport { Regiones } from 'src/app/model/regiones.model';\nimport { WebServices } from 'src/app/service/web.service';\n\n@Component({\n  selector: 'app-regionestecleo',\n  templateUrl: './regionestecleo.component.html',\n  styleUrls: ['./regionestecleo.component.css']\n})\nexport class RegionestecleoComponent implements OnInit {\n\n  id:number=0;\n  public regiones = new  Regiones();\n  \n  constructor(private service:WebServices,private snackBar: MatSnackBar,private router: Router,public rutaActiva: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.obtenerDatos(this.rutaActiva.snapshot.params.Id);\n\n  }\n\n  public setData(data: Regiones) {\n    this.regiones = data;\n  }\n\n  cerrar() {\n    this.router.navigate(['/regiones'], { relativeTo: this.rutaActiva });\n  }\n\n  grabar(){\n\n    if(this.regiones.id ==0){\n      this.service.postRegiones(this.regiones).subscribe(data =>{\n        this.snackBar.open('Registro grabado', '', {\n          duration: 4000,\n        });\n        this.cerrar();\n      })\n    }else{\n      this.service.putRegiones(this.regiones).subscribe(data =>{\n        this.snackBar.open('Registro modificado', '', {\n          duration: 4000,\n        });\n        this.cerrar();\n      })\n    }\n    \n  }\n\n  obtenerDatos(id:number){\n    if(id>0){\n      this.service.getRegionesId(id).subscribe(data =>{\n        this.regiones=data[0];\n      })\n    }\n    \n  }\n\n}\n","<div class=\"main-div\">\n  <mat-card class=\"example-card\">\n    <mat-card-title>Regiones Tecleo</mat-card-title>\n    <mat-card-subtitle>ingreso de regiones</mat-card-subtitle>\n    <mat-card-content>\n      <div>\n        <mat-form-field appearance=\"standard\" [style.width.%]=\"100\">\n          <mat-label>Descripcion</mat-label>\n          <input\n            matInput\n            type=\"text\"\n            placeholder=\"Ingrese la descripcion de region\"\n            [(ngModel)]=\"regiones.descripcion\"\n            requiere\n          />\n        </mat-form-field>\n      </div>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-raised-button color=\"warn\" (click)=\"cerrar()\">\n        Cancelar\n      </button>\n      <button mat-raised-button color=\"primary\" (click)=\"grabar()\">\n        Grabar\n      </button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","<section>\n  <div class=\"example-label\"><h2>Sucursales</h2></div>\n  <div class=\"example-button-row\">\n    <div class=\"example-flex-container\">\n      <mat-form-field\n        appearance=\"standard\"\n        [style.width.%]=\"100\"\n        [style.margin-right.%]=\"2\"\n        [style.margin-left.%]=\"2\"\n      >\n        <mat-label>Seleccione Comercio</mat-label>\n        <mat-select [(ngModel)]=\"comerciosId\">\n          <mat-option>Todos</mat-option>\n          <mat-option *ngFor=\"let c of _datosComercios\" [value]=\"c.id\">\n            {{ c.descripcion }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <div class=\"example-button-container\">\n        <button mat-fab color=\"primary\" style=\"float: right\" (click)=\"grabar()\">\n          <mat-icon>add</mat-icon>\n        </button>\n      </div>\n      <div class=\"example-button-container\">\n        <button mat-fab color=\"primary\" style=\"float: right\" (click)=\"buscar()\">\n          <mat-icon>search</mat-icon>\n        </button>\n      </div>\n    </div>\n  </div>\n</section>\n\n<div>\n  <mat-card style=\"margin: 1em\" *ngFor=\"let element of _datos\">\n    <mat-card-header>\n      <mat-card-title>{{ \"Sucursal: \" + element.descripcion }}</mat-card-title>\n      <mat-card-subtitle></mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n      <div></div>\n    </mat-card-content>\n    <mat-card-actions align=\"end\">\n      <button mat-icon-button color=\"warn\" (click)=\"eliminar(element)\">\n        <mat-icon>delete</mat-icon>\n      </button>\n      <button mat-icon-button color=\"primary\" (click)=\"modificar(element)\">\n        <mat-icon>mode_edit</mat-icon>\n      </button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Comercios } from 'src/app/model/comercios.model';\nimport { Sucursales } from 'src/app/model/sucursales.model';\nimport { WebServices } from 'src/app/service/web.service';\n\n@Component({\n  selector: 'app-sucursales',\n  templateUrl: './sucursales.component.html',\n  styleUrls: ['./sucursales.component.css']\n})\nexport class SucursalesComponent implements OnInit {\n\n  public _datos:Sucursales[]= [];\n  public _datosComercios:Comercios[]= [];\n  public comerciosId:number=0;\n\n  constructor(private service:WebServices,private snackBar: MatSnackBar,private router: Router,public rutaActiva: ActivatedRoute) { \n    this.service.validaLogin()\n    this.buscar();\n  }\n\n  ngOnInit(): void {\n    this.setFiltros()\n  }\n\n\n  buscar(){\n    if(this.comerciosId != undefined && this.comerciosId>0){\n      this.service.getSucursalComerciosId(this.comerciosId).subscribe(data =>{\n        this._datos=data;\n      })\n    }else{\n      this.service.getSucursales().subscribe(data => {\n        this._datos=data \n      });\n    }\n    \n  }\n\n  grabar(){\n    this.router.navigate(['./sucursalestecleo',0], { relativeTo: this.rutaActiva });\n  }\n\n  modificar(data:Sucursales){\n    this.router.navigate(['./sucursalestecleo',data.id], { relativeTo: this.rutaActiva });\n  }\n\n  eliminar(data:Sucursales){\n    const respuesta = confirm(\"¿Esta seguro que desea eliminar el registro?. Ya no podra recuperarlo.\");\n    if (respuesta) {\n      \n      this.service.deleteSucursal(data).subscribe(()=>{\n        this.buscar()\n      })\n    }\n  }\n\n  setFiltros(){\n    this.service.getComercios().subscribe(data=>{\n      this._datosComercios = data;\n    })\n  }\n\n}\n","<div class=\"main-div\">\n  <mat-card class=\"example-card\">\n    <mat-card-title>Sucursales Tecleo</mat-card-title>\n    <mat-card-subtitle>ingreso de sucursales</mat-card-subtitle>\n    <mat-card-content>\n      <div>\n        <mat-form-field appearance=\"standard\" [style.width.%]=\"100\">\n          <mat-label>Seleccione Comercios</mat-label>\n          <mat-select [(ngModel)]=\"cls.comerciosId\" required>\n            <mat-option *ngFor=\"let c of _datosComercios\" [value]=\"c.id\">\n              {{ c.descripcion }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"standard\" [style.width.%]=\"100\">\n          <mat-label>Descripcion</mat-label>\n          <input\n            matInput\n            type=\"text\"\n            placeholder=\"Ingrese la descripcion de region\"\n            [(ngModel)]=\"cls.descripcion\"\n            requiere\n          />\n        </mat-form-field>\n      </div>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-raised-button color=\"warn\" (click)=\"cerrar()\">\n        Cancelar\n      </button>\n      <button mat-raised-button color=\"primary\" (click)=\"grabar()\">\n        Grabar\n      </button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Comercios } from 'src/app/model/comercios.model';\nimport { Sucursales } from 'src/app/model/sucursales.model';\nimport { WebServices } from 'src/app/service/web.service';\n\n@Component({\n  selector: 'app-sucursalestecleo',\n  templateUrl: './sucursalestecleo.component.html',\n  styleUrls: ['./sucursalestecleo.component.css']\n})\nexport class SucursalestecleoComponent implements OnInit {\n\n  id:number=0;\n  public cls = new  Sucursales();\n  public _datosComercios:Comercios[]= [];\n  \n  constructor(private service:WebServices,private snackBar: MatSnackBar,private router: Router,public rutaActiva: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.setFiltros();\n    this.obtenerDatos(this.rutaActiva.snapshot.params.Id);    \n  } \n\n  cerrar() {\n    this.router.navigate(['/sucursales'], { relativeTo: this.rutaActiva });\n  }\n\n  grabar(){\n\n    this.service.getComerciosId(this.cls.comerciosId).subscribe(data=>{\n      this.cls.departamentosId = data[0].id;\n      this.cls.municipiosId = data[0].municipiosId;\n      console.log(\"GetComercios\")\n  \n      this.service.getMunicipioId(data[0].municipiosId).subscribe(data=>{\n        console.log(\"GetMunicipios\")\n \n        this.service.getDepartamentosId(data[0].departamentosId).subscribe(data =>{\n          console.log(\"GetDepartamentos\")\n\n          this.cls.regionesId = data[0].regionesId;\n\n          if(this.cls.id ==0){\n            this.service.postSucursal(this.cls).subscribe(data =>{\n              this.snackBar.open('Registro grabado', '', {\n                duration: 4000,\n              });\n              this.cerrar();\n            })\n          }else{\n            this.service.putSucursal(this.cls).subscribe(data =>{\n              this.snackBar.open('Registro modificado', '', {\n                duration: 4000,\n              });\n              this.cerrar();\n            })\n          }\n        })\n      })\n    })\n\n    \n    \n  }\n\n  obtenerDatos(id:number){\n    if(id>0){\n      this.service.getSucursalId(id).subscribe(data =>{\n        this.cls=data[0];      \n      })\n    }\n    \n  }\n\n  setFiltros(){\n    this.service.getComercios().subscribe(data=>{\n      this._datosComercios = data;\n    })\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Usuario } from 'src/app/model/usuario.model';\nimport { WebServices } from 'src/app/service/web.service';\n\n@Component({\n  selector: 'app-usuarios',\n  templateUrl: './usuarios.component.html',\n  styleUrls: ['./usuarios.component.css']\n})\nexport class UsuariosComponent implements OnInit {\n\n  hide = true;\n  public usuario= new Usuario();\n\n  constructor(private service:WebServices,private snackBar: MatSnackBar) {\n    this.service.validaLogin()\n   }\n\n  ngOnInit(): void {\n  }\n\n  grabar(){\n    if(this.usuario.user != '' && this.usuario.password != '' ){\n    this.service.postUsuario(this.usuario).subscribe(data=>{\n      this.snackBar.open('Usuario creado correctamente', '', {\n        duration: 4000,\n      });\n      this.usuario = new Usuario();\n    })\n  }else{\n    this.snackBar.open('Los campos usuarios y contraseña son requerido', '', {\n      duration: 4000,\n    });\n  }\n  }\n\n}\n","<div class=\"main-div\">\n  <mat-card class=\"example-card\">\n    <mat-card-header>\n      <div mat-card-avatar class=\"example-header-image\"></div>\n      <mat-card-title>Crear Usuario</mat-card-title>\n      <mat-card-subtitle\n        >se crea usuario para poder ingresar a las opciones</mat-card-subtitle\n      >\n    </mat-card-header>\n    <mat-card-content>\n      <mat-form-field appearance=\"standard\" [style.width.%]=\"100\">\n        <mat-label>Usuario</mat-label>\n        <input\n          matInput\n          type=\"text\"\n          placeholder=\"Ingrese el usuario\"\n          [(ngModel)]=\"usuario.user\"\n          requiere\n        />\n        <mat-icon matSuffix>person</mat-icon>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"standard\" [style.width.%]=\"100\">\n        <mat-label>Contraseña</mat-label>\n        <input\n          matInput\n          [type]=\"hide ? 'password' : 'text'\"\n          placeholder=\"Ingrese la contraseña\"\n          [(ngModel)]=\"usuario.password\"\n          require\n        />\n\n        <button\n          mat-icon-button\n          matSuffix\n          (click)=\"hide = !hide\"\n          [attr.aria-label]=\"'Hide password'\"\n          [attr.aria-pressed]=\"hide\"\n        >\n          <mat-icon>{{ hide ? \"visibility_off\" : \"visibility\" }}</mat-icon>\n        </button>\n      </mat-form-field>\n    </mat-card-content>\n    <mat-card-actions>\n      <button\n        mat-raised-button\n        color=\"primary\"\n        (click)=\"grabar()\"\n        [style.width.%]=\"100\"\n      >\n        <span>CREAR USUARIO</span>\n      </button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}